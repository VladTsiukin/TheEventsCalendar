@{
    ViewData["Title"] = "Home Page";

}

@model CreateEventViewModel

@using System.Security.Claims

@{
    string userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

<!-- main -->
<div class="d-flex flex-column container-fields">
    <!-- datepicker -->
    <div id="datepicker" data-date="@DateTime.Now.ToLocalTime().ToString()"></div>
    <!-- for datepicker -->
    <input type="hidden" id="my_hidden_input">
    <!-- btns -->
    <div class="d-flex justify-content-center">
        @{
            if (User.IsInRole("admin"))
            {
                <a class="nav-link" href="#" data-toggle="modal" data-target="#exampleModalLong">
                    <i class="fas fa-calendar-plus" data-toggle="tooltip" 
                       data-placement="top" title="Создать событие">
                    </i>
                </a>
            }
            else
            {
                <span id="disabledBtn" class="d-inline-block" data-toggle="popover" data-content="Нет прав доступа">
                    <a class="nav-link disabled" href="#" style="pointer-events: none;">
                        <i class="fas fa-calendar-plus"></i>
                    </a>
                </span>
                
            }
        }
        <a class="nav-link" href="#">
            <i class="fas fa-pen-square" data-toggle="tooltip" data-placement="top"
               title="Подписаться на событие"></i>
        </a>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">
                    <span class="badge badge-secondary">Создать событие</span>
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form asp-action="CreateEvent" asp-controller="Home" method="post">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <input type="hidden" asp-for="DateOfCreation" value="@DateTimeOffset.Now" />
                    <input type="hidden" asp-for="CreatorId" value="@userId" />
                    @* INPUT NAME *@
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Название</span>
                        </div>
                        <input asp-for="Name" class="form-control" aria-label="Small"
                               aria-describedby="inputGroup-sizing-sm" placeholder="Введите название">
                    </div>
                    @* INPUT DATE *@
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Дата</span>
                        </div>
                        <input type="date" asp-for="EventDate" value="@DateTimeOffset.Now" class="form-control"
                               aria-label="Small" aria-describedby="inputGroup-sizing-sm">
                    </div>
                    @* INPUT NUMBER *@
                    <div class="input-group input-group-sm mb-3">
                        <div class="input-group-prepend">
                            <span class="input-group-text" id="inputGroup-sizing-sm">Количество участников</span>
                        </div>
                        <input asp-for="AmountOfParticipants" min="0" class="form-control" aria-label="Small"
                               aria-describedby="inputGroup-sizing-sm">
                    </div>
                    @* BUTTON ADD FIELD *@
                    <button id="addField" type="button" class="btn btn-primary btn-sm mb-3">
                        <i class="fas fa-plus">Добавить Поле</i>
                    </button>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
                        <button id="submitBtn" type="submit" class="btn btn-primary">Создать</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- js -->
<script type="text/javascript">

    document.addEventListener('DOMContentLoaded', () => {

        const submitBtn = document.getElementById('submitBtn');
        const addBtn = document.getElementById('addField');
        const modalFooter = document.getElementsByClassName('modal-footer')[0];
        //const form = document.getElementsByTagName('form')[0];

        // submit
        submitBtn.addEventListener('click', (e) => {
            //$.validator.unobtrusive.parse(form);
            console.info("click submit!");
        });

        // set new field via 'Closures'
        const setField = createField();

        // add field
        addBtn.addEventListener('click', () => {
            modalFooter.insertAdjacentElement('beforebegin', setField());
        });

        // delete field
        document.addEventListener('click', (e) => {
            if (!e.target.hasAttribute('data-clear-name')) {
                return;
            }

            let name = e.target.getAttribute('data-clear-name');
            deleteFieldViaAttribute(name);
        });

        // create new field
        function createField() {
            let fieldId = 0;
            return function () {
                fieldId = fieldId + 1;
                let fieldName = 'field' + fieldId;
                let innerFields =
                    '<div class="input-group-prepend">'
                    + '<span class="input-group-text" id="inputGroup-sizing-sm">Название поля</span>'
                    + '</div>'
                    + '<input name="Content[' + (fieldId - 1) + '].Name" required class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">'
                    + '<div class="input-group-prepend">'
                    + '<span class="input-group-text" id="inputGroup-sizing-sm">Значение поля</span>'
                    + '</div>'
                    + '<input name="Content[' + (fieldId - 1) + '].Value" required class="form-control" aria-label="Small" aria-describedby="inputGroup-sizing-sm">'
                    + '<div class="input-group-append"> '
                    + '<a data-clear-name="' + fieldName + '" class="btn btn-sm btn-outline-danger" href="#">x</a>'
                    + '</div>';

                const field = document.createElement('div');
                field.setAttribute('id', fieldName);
                field.classList.add('input-group');
                field.classList.add('input-group-sm');
                field.classList.add('mb-3');
                field.innerHTML = innerFields;
                return field;
            }
        }

        // delete field via attribute name
        function deleteFieldViaAttribute(name) {
            document.getElementById(name).remove();
        }

    });

</script>

@section Scripts {
    @await Html.PartialAsync("_AlertPartial", TempData["TempDataProperty-NoError"])
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<style>
    /* validation */
    input:invalid {
        box-shadow: 0 0 1px 0 #E33545;
    }

    input:focus:invalid {
        outline: none;
    }
</style>



